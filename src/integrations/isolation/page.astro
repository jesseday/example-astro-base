---
import { experimental_AstroContainer } from 'astro/container';
const container = await experimental_AstroContainer.create();

import { getEntry, getCollection } from 'astro:content';
import Layout from '@layouts/Layout.astro';
import componentMap from './import-map';

const url = new URL(Astro.request.url);

const entry = await getEntry('components', (Astro.params.component || '').toLowerCase());
const menu = (await getCollection('components'))
  .map(entry => entry.data.id.split('/'))
  .toSorted((a, b) => a.join().localeCompare(b.join()))
  .reduce((acc, name) => {
    if (!acc[name[0]]) {
      acc[name[0]] = [];
    }
    acc[name[0]].push(name);
    return acc;
  }, {});

let html;
if (entry) {
  // Just touch the component from the import map.
  // This is a hack to make sure the styles are loaded
  const _touch = componentMap[entry.data.id];
  const AstroComponent = await import(
    /* @vite-ignore */
    entry.data.file
  );
  html = container.renderToString(AstroComponent.default);
} else {
  html = 'Not found';
}
---
<Layout title={entry.data.name}>
  {url.searchParams.get('hideMenu') !== 'true' && (
    <menu>
      <li><a href="?hideMenu=true">Hide menu</a></li>
      {Object.keys(menu).map((category) => (
        <li>
          <strong>{category}</strong>
          <ul>
            {menu[category].map((component: string[]) => (
              <li>
                <a href={`/isolation/${component.join('/')}`}>{component.slice(1).join('/')}</a>
              </li>
            ))}
          </ul>
        </li>
      ))}
    </menu>
  )}
  <article>
    <Fragment set:html={html}></Fragment>
  </article>
</Layout>

<style>
  menu {
    background-color: aliceblue;
    grid-column: 1 / -1;
    margin: 0;
    padding: 1rem;
    word-wrap: break-word;

    ul,
    li {
      list-style: none;
      margin: 0;
      padding: 0;
    }

    li > ul {
      margin-top: 1rem;
    }

   > li + li {
      margin-top: 2rem;
    }
  }

  article {
    display: contents;
    grid-column: 1 / -1;
  }

  menu + article {
    display: block;
  }

  @media screen and (min-width: 768px) {
    menu {
      grid-column: span 4;
      height: 100vh;
      overflow-y: scroll;
      position: sticky;
      top: 0;
    }

    article {
      grid-column: span 12;
    }
  }

  @media screen and (min-width: 1024px) {
    menu {
      grid-column: span 4;
    }

    article {
      grid-column: span 20;
    }
  }
</style>
