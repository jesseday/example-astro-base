---
import Section, { type Props as SectionProps } from "@shared/ui/Section.astro";

export interface Props {
  contain?: boolean;
  presentation?: "image-right" | "full";
  forward?: SectionProps;
}

const Wrapper = Astro.props.contain ? Section : Fragment;
const forward = Astro.props.forward || {};
const presentation = Astro.props.presentation || "image-right";
---

<Wrapper
  width={forward?.width || "full"}
  theme={forward?.theme || "dark"}
  {...forward}
>
  <div data-component-id="Hero" data-presentation={presentation}>
    <div class="content" >
      <slot name="content" />
    </div>
    <slot name="image" />
  </div>
</Wrapper>

<style>
  /* Minimal styling on the base component.  Just enough.  Layout goes on presentation. */
  [data-component-id="Hero"] {
    position: relative;
  }

  [data-component-id="Hero"] :global(.eyebrow) {
    font-size: var(--size-step--1);
    font-family: var(--font-family-sans);
    font-weight: 600;
    margin: 0;
    text-transform: uppercase;
  }

  [data-component-id="Hero"] :global(:is(h1, p)) {
    margin-top: 0;
    margin-bottom: 1rem;
  }

  [data-component-id="Hero"] .content :global(> *) {
    margin-bottom: 0;
  }

  [data-component-id="Hero"] .content :global(> *:not(.eyebrow) + *) {
    margin-top: var(--space-base-md);
  }

  [data-presentation="full"] {
    display: grid;
    grid-template-columns: 1fr;
    > * {
      grid-column: 1;
      grid-row: 1;
    }
  }

  [data-presentation="full"] .content {
    align-self: center;
    justify-self: center;
    margin: 0 auto;
    max-width: 980px;
    padding: var(--space-l-xl);
    text-align: center;
    z-index: 1;
  }

  [data-presentation="full"] .content :global(> :not(.title)) {
    max-width: 680px;
    margin-inline: auto;
  }

  [data-presentation="full"] :global(:is(h1, .title)) {
    font-size: var(--size-step-8);
    line-height: .9;
  }

  [data-presentation="full"] :global(img) {
    object-fit: cover;
    width: 100%;
    height: auto;
    z-index: 0;
    mask-image: radial-gradient(transparent, black);
    filter: grayscale(.5);
  }

  [data-presentation="image-right"] {
    display: grid;
    grid-template-columns: 1fr;
    grid-column: 1 / -1;
    align-items: center;
    gap: 2rem;
    padding: var(--space-l-xl);
    /* 
     * calc is the width that i want it to break minus
     * the padding on the sides, the gap between the
     * elements, and the border around the section.
     */
    grid-template-columns: repeat(auto-fit, minmax(calc((767px / 2 ) - 1rem - 1rem - var(--space-l-xl) - 1px), 1fr));
  }

  [data-presentation="image-right"] > :global(:last-child:is(picture, img)) {
    display: block;
    width: 100%;
    max-width: 100%;
    height: auto;
  }
</style>
